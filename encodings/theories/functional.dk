(;-----------------------------------------------------------------;)
(;-------------------------  Coq encoding  ------------------------;)
(;-----------------------------------------------------------------;)

(;-------------------------  Nat definition  ----------------------;)

Nat : Type.
z : Nat.
s : Nat -> Nat.

def max : Nat -> Nat -> Nat.
[i  ] max i     z     --> i.
[j  ] max z     (s j) --> s j.
[i,j] max (s i) (s j) --> s (max i j).


(;----------------------  CTS Sorts definition  -------------------;)

prop : Sort.
type : Nat -> Sort.

def set   : Sort := type z.
def type0 : Sort := type (s z).

(;
Coqine prop  = prop
Coqine type  = type
Coqine set   = set
Coqine type0 = type0

Coqine Lvl    = Nat (; Universe polymorphism quantification space ;)
Coqine lvl0   = z   (; Nat representation of lowest level (Set)   ;)
Coqine lvlS   = s   (; Nat representation of Type@{i+1}           ;)
Coqine lvlMax = max (; Nat representation of Type@{max(i,j)} ;)
;)


(;---------------------  CTS Axiom definition  --------------------;)

[ ] axiom prop     --> type z
[i] axiom (type i) --> type (s i).


(;-----------------------  CTS Rule definition  -------------------;)

[s  ] rule prop     s        --> s
[   ] rule _        prop     --> prop
[i,j] rule (type i) (type j) --> type (max i j).


(;-------------------  CTS Cumulativity definition  ---------------;)

[   ] Cumul prop         prop         --> true.
[i  ] Cumul prop         (type i    ) --> true.
[i  ] Cumul (type z)     (type i    ) --> true.
[i,j] Cumul (type (s i)) (type (s j)) --> Cumul (type i) (type j).


(;-----------------------  LUB wrt Cumulativity  ------------------;)

[s  ] sup prop     s        --> s
[s  ] sup s        prop     --> s
[i,j] sup (type i) (type j) --> type (max i j).
